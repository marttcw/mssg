use std::{fs, env, /*error::Error,*/ io::prelude::*, path::Path};

// Initialize a new site project
pub fn init(name: &str) -> std::io::Result<()> {
    if name != "" {
        fs::create_dir(name)?;
        let proj_dir = Path::new(name);
        assert!(env::set_current_dir(&proj_dir).is_ok());
        println!("Directory \"{}\" created", proj_dir.display());
    }

    // Create directories from the root directory of the site project
    fs::create_dir("src")?;
    fs::create_dir("build")?;

    // index.md Markdown
    let md_ex = "# Homepage\n\
                 Hello world, this is an example homepage generated by mssg.\n";

    // config.toml toml configuration
    let toml_ex = format!("title = \"{}\"\n\
        description = \"This site is generated by mssg\"\n\
        language = \"en\"\n"
        , name);

    // Write to file
    let mut file;
    file = fs::File::create("src/index.md")?;
    file.write_all(md_ex.as_bytes())?;

    file = fs::File::create("src/config.toml")?;
    file.write_all(toml_ex.as_bytes())?;

    println!("Project successfully initialized");

    Ok(())
}
